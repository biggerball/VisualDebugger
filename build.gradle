plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.10.0'
    id "org.sonarqube" version "3.2.0"
    id 'jacoco'
    id ("net.ltgt.errorprone") version "3.0.1"
}

group 'no.hvl.tk'
version '1.9.2'

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/net.sourceforge.plantuml/plantuml
    implementation group: 'net.sourceforge.plantuml', name: 'plantuml', version: '1.2021.5'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // Websocket server and server container dependencies
    // https://mvnrepository.com/artifact/jakarta.websocket/jakarta.websocket-api
    compileOnly group: 'jakarta.websocket', name: 'jakarta.websocket-api', version: '2.0.0'
    // https://mvnrepository.com/artifact/org.glassfish.tyrus/tyrus-server
    implementation group: 'org.glassfish.tyrus', name: 'tyrus-server', version: '2.0.0'
    // https://mvnrepository.com/artifact/org.glassfish.tyrus/tyrus-container-grizzly-server
    implementation group: 'org.glassfish.tyrus', name: 'tyrus-container-grizzly-server', version: '2.0.0'


    // XML-marshalling not part of jdk 11 anymore.
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.1 '
    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-core
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '3.0.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.1'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    errorprone("com.google.errorprone:error_prone_core:2.16")
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = '2022.2'
    plugins = ['java']
}
patchPluginXml {
    changeNotes = """A new loading depth setting was temporarily added to avoid loading unnecessary objects in the background. Loading objects on demand is under investigation."""
}
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

tasks.runIde {
    jvmArgs("--add-exports", "java.base/jdk.internal.vm=ALL-UNNAMED")
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco.xml")
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "timKraeuter_VisualDebugger"
        property "sonar.organization", "timkraeuter"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

tasks.compileJava {
    // Ignore scenarios test.
    options.errorprone.excludedPaths = ".*/DebuggingScenariosTest.java"
}